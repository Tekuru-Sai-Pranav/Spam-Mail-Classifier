import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer, TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, classification_report

data = pd.read_csv("spam.csv", encoding="latin-1")[['v1', 'v2']]
data.columns = ['label', 'message']
data['label'] = data['label'].map({'ham': 0, 'spam': 1})

X_train, X_test, y_train, y_test = train_test_split(
    data['message'], data['label'], test_size=0.2, random_state=42
)

cv = CountVectorizer(stop_words='english')
X_train_cv = cv.fit_transform(X_train)
X_test_cv = cv.transform(X_test)

tfidf = TfidfVectorizer(stop_words='english')
X_train_tfidf = tfidf.fit_transform(X_train)
X_test_tfidf = tfidf.transform(X_test)

model_cv = MultinomialNB()
model_cv.fit(X_train_cv, y_train)

model_tfidf = MultinomialNB()
model_tfidf.fit(X_train_tfidf, y_train)

y_pred_cv = model_cv.predict(X_test_cv)
y_pred_tfidf = model_tfidf.predict(X_test_tfidf)

print("Accuracy (Bag-of-Words):", accuracy_score(y_test, y_pred_cv))
print("Accuracy (TF-IDF):", accuracy_score(y_test, y_pred_tfidf))
print("\nClassification Report (TF-IDF):\n", classification_report(y_test, y_pred_tfidf))
